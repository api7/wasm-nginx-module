
/*
 * Copyright 2022 Shenzhen ZhiLiu Technology Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
/* Code generated by `./gen_wasm_host_api.py src/http`. DO NOT EDIT. */
#ifndef NGX_HTTP_WASM_API_WASMEDGE_H
#define NGX_HTTP_WASM_API_WASMEDGE_H


#include <wasm.h>
#include <wasmedge/wasmedge.h>
#include <ngx_core.h>
#include "proxy_wasm/proxy_wasm_types.h"
#include "http/ngx_http_wasm_api_def.h"


#define MAX_WASM_API_ARG  12


#define DEFINE_WASM_API(NAME, ARG_CHECK) \
    static WasmEdge_Result wasmedge_##NAME( \
        void *Data, \
        WasmEdge_MemoryInstanceContext *MemCxt, \
        const WasmEdge_Value *In, \
        WasmEdge_Value *Out \
    ) { \
        ARG_CHECK \
        Out[0] = WasmEdge_ValueGenI32(res); \
        return WasmEdge_Result_Success; \
    }
#define DEFINE_WASM_NAME(NAME, ARG) \
    {ngx_string(#NAME), wasmedge_##NAME, ARG},


typedef struct {
    ngx_str_t                name;
    WasmEdge_HostFunc_t      cb;
    int8_t                   param_num;
    enum WasmEdge_ValType    param_type[MAX_WASM_API_ARG];
} ngx_wasm_wasmedge_host_api_t;


#define DEFINE_WASM_NAME_ARG_VOID \
    0, {}
#define DEFINE_WASM_API_ARG_CHECK_VOID(NAME) \
    int32_t res = NAME();

#define DEFINE_WASM_NAME_ARG_I32_1 \
    1, { \
    WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_1(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t res = NAME(p0);

#define DEFINE_WASM_NAME_ARG_I32_2 \
    2, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_2(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t res = NAME(p0, p1);

#define DEFINE_WASM_NAME_ARG_I32_3 \
    3, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_3(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t res = NAME(p0, p1, p2);

#define DEFINE_WASM_NAME_ARG_I32_4 \
    4, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_4(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t res = NAME(p0, p1, p2, p3);

#define DEFINE_WASM_NAME_ARG_I32_5 \
    5, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
}
#define DEFINE_WASM_API_ARG_CHECK_I32_5(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t res = NAME(p0, p1, p2, p3, p4);

#define DEFINE_WASM_NAME_ARG_I32_6 \
    6, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_6(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5);

#define DEFINE_WASM_NAME_ARG_I32_7 \
    7, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_7(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t p6 = WasmEdge_ValueGetI32(In[6]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6);

#define DEFINE_WASM_NAME_ARG_I32_8 \
    8, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_8(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t p6 = WasmEdge_ValueGetI32(In[6]); \
    int32_t p7 = WasmEdge_ValueGetI32(In[7]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6, p7);

#define DEFINE_WASM_NAME_ARG_I32_9 \
    9, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_9(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t p6 = WasmEdge_ValueGetI32(In[6]); \
    int32_t p7 = WasmEdge_ValueGetI32(In[7]); \
    int32_t p8 = WasmEdge_ValueGetI32(In[8]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6, p7, p8);

#define DEFINE_WASM_NAME_ARG_I32_10 \
    10, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
}
#define DEFINE_WASM_API_ARG_CHECK_I32_10(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t p6 = WasmEdge_ValueGetI32(In[6]); \
    int32_t p7 = WasmEdge_ValueGetI32(In[7]); \
    int32_t p8 = WasmEdge_ValueGetI32(In[8]); \
    int32_t p9 = WasmEdge_ValueGetI32(In[9]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);

#define DEFINE_WASM_NAME_ARG_I32_11 \
    11, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_11(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t p6 = WasmEdge_ValueGetI32(In[6]); \
    int32_t p7 = WasmEdge_ValueGetI32(In[7]); \
    int32_t p8 = WasmEdge_ValueGetI32(In[8]); \
    int32_t p9 = WasmEdge_ValueGetI32(In[9]); \
    int32_t p10 = WasmEdge_ValueGetI32(In[10]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);

#define DEFINE_WASM_NAME_ARG_I32_12 \
    12, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32, WasmEdge_ValType_I32,  \
    WasmEdge_ValType_I32, WasmEdge_ValType_I32, }
#define DEFINE_WASM_API_ARG_CHECK_I32_12(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI32(In[1]); \
    int32_t p2 = WasmEdge_ValueGetI32(In[2]); \
    int32_t p3 = WasmEdge_ValueGetI32(In[3]); \
    int32_t p4 = WasmEdge_ValueGetI32(In[4]); \
    int32_t p5 = WasmEdge_ValueGetI32(In[5]); \
    int32_t p6 = WasmEdge_ValueGetI32(In[6]); \
    int32_t p7 = WasmEdge_ValueGetI32(In[7]); \
    int32_t p8 = WasmEdge_ValueGetI32(In[8]); \
    int32_t p9 = WasmEdge_ValueGetI32(In[9]); \
    int32_t p10 = WasmEdge_ValueGetI32(In[10]); \
    int32_t p11 = WasmEdge_ValueGetI32(In[11]); \
    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);

#define DEFINE_WASM_NAME_ARG_I32_I64 \
    2, { \
    WasmEdge_ValType_I32, WasmEdge_ValType_I64, }
#define DEFINE_WASM_API_ARG_CHECK_I32_I64(NAME) \
    int32_t p0 = WasmEdge_ValueGetI32(In[0]); \
    int32_t p1 = WasmEdge_ValueGetI64(In[1]); \
    int32_t res = NAME(p0, p1);

DEFINE_WASM_API(proxy_set_effective_context,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_set_effective_context))
DEFINE_WASM_API(proxy_get_property,
                DEFINE_WASM_API_ARG_CHECK_I32_4(proxy_get_property))
DEFINE_WASM_API(proxy_set_property,
                DEFINE_WASM_API_ARG_CHECK_I32_4(proxy_set_property))
DEFINE_WASM_API(proxy_log,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_log))
DEFINE_WASM_API(proxy_get_buffer_bytes,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_get_buffer_bytes))
DEFINE_WASM_API(proxy_set_buffer_bytes,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_set_buffer_bytes))
DEFINE_WASM_API(proxy_send_local_response,
                DEFINE_WASM_API_ARG_CHECK_I32_8(proxy_send_local_response))
DEFINE_WASM_API(proxy_send_http_response,
                DEFINE_WASM_API_ARG_CHECK_I32_8(proxy_send_http_response))
DEFINE_WASM_API(proxy_get_current_time_nanoseconds,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_get_current_time_nanoseconds))
DEFINE_WASM_API(proxy_set_tick_period_milliseconds,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_set_tick_period_milliseconds))
DEFINE_WASM_API(proxy_get_configuration,
                DEFINE_WASM_API_ARG_CHECK_I32_2(proxy_get_configuration))
DEFINE_WASM_API(proxy_get_header_map_pairs,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_get_header_map_pairs))
DEFINE_WASM_API(proxy_set_header_map_pairs,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_set_header_map_pairs))
DEFINE_WASM_API(proxy_get_header_map_value,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_get_header_map_value))
DEFINE_WASM_API(proxy_remove_header_map_value,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_remove_header_map_value))
DEFINE_WASM_API(proxy_replace_header_map_value,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_replace_header_map_value))
DEFINE_WASM_API(proxy_add_header_map_value,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_add_header_map_value))
DEFINE_WASM_API(proxy_get_shared_data,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_get_shared_data))
DEFINE_WASM_API(proxy_set_shared_data,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_set_shared_data))
DEFINE_WASM_API(proxy_register_shared_queue,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_register_shared_queue))
DEFINE_WASM_API(proxy_resolve_shared_queue,
                DEFINE_WASM_API_ARG_CHECK_I32_5(proxy_resolve_shared_queue))
DEFINE_WASM_API(proxy_dequeue_shared_queue,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_dequeue_shared_queue))
DEFINE_WASM_API(proxy_enqueue_shared_queue,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_enqueue_shared_queue))
DEFINE_WASM_API(proxy_continue_request,
                DEFINE_WASM_API_ARG_CHECK_VOID(proxy_continue_request))
DEFINE_WASM_API(proxy_continue_response,
                DEFINE_WASM_API_ARG_CHECK_VOID(proxy_continue_response))
DEFINE_WASM_API(proxy_clear_route_cache,
                DEFINE_WASM_API_ARG_CHECK_VOID(proxy_clear_route_cache))
DEFINE_WASM_API(proxy_continue_stream,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_continue_stream))
DEFINE_WASM_API(proxy_close_stream,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_close_stream))
DEFINE_WASM_API(proxy_http_call,
                DEFINE_WASM_API_ARG_CHECK_I32_10(proxy_http_call))
DEFINE_WASM_API(proxy_grpc_call,
                DEFINE_WASM_API_ARG_CHECK_I32_12(proxy_grpc_call))
DEFINE_WASM_API(proxy_grpc_stream,
                DEFINE_WASM_API_ARG_CHECK_I32_9(proxy_grpc_stream))
DEFINE_WASM_API(proxy_grpc_send,
                DEFINE_WASM_API_ARG_CHECK_I32_4(proxy_grpc_send))
DEFINE_WASM_API(proxy_grpc_cancel,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_grpc_cancel))
DEFINE_WASM_API(proxy_grpc_close,
                DEFINE_WASM_API_ARG_CHECK_I32_1(proxy_grpc_close))
DEFINE_WASM_API(proxy_get_status,
                DEFINE_WASM_API_ARG_CHECK_I32_3(proxy_get_status))
DEFINE_WASM_API(proxy_done,
                DEFINE_WASM_API_ARG_CHECK_VOID(proxy_done))
DEFINE_WASM_API(proxy_call_foreign_function,
                DEFINE_WASM_API_ARG_CHECK_I32_6(proxy_call_foreign_function))
DEFINE_WASM_API(proxy_define_metric,
                DEFINE_WASM_API_ARG_CHECK_I32_4(proxy_define_metric))
DEFINE_WASM_API(proxy_increment_metric,
                DEFINE_WASM_API_ARG_CHECK_I32_I64(proxy_increment_metric))
DEFINE_WASM_API(proxy_record_metric,
                DEFINE_WASM_API_ARG_CHECK_I32_I64(proxy_record_metric))
DEFINE_WASM_API(proxy_get_metric,
                DEFINE_WASM_API_ARG_CHECK_I32_I64(proxy_get_metric))

static ngx_wasm_wasmedge_host_api_t host_apis[] = {
    DEFINE_WASM_NAME(proxy_set_effective_context, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_get_property, DEFINE_WASM_NAME_ARG_I32_4)
    DEFINE_WASM_NAME(proxy_set_property, DEFINE_WASM_NAME_ARG_I32_4)
    DEFINE_WASM_NAME(proxy_log, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_get_buffer_bytes, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_set_buffer_bytes, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_send_local_response, DEFINE_WASM_NAME_ARG_I32_8)
    DEFINE_WASM_NAME(proxy_send_http_response, DEFINE_WASM_NAME_ARG_I32_8)
    DEFINE_WASM_NAME(proxy_get_current_time_nanoseconds, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_set_tick_period_milliseconds, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_get_configuration, DEFINE_WASM_NAME_ARG_I32_2)
    DEFINE_WASM_NAME(proxy_get_header_map_pairs, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_set_header_map_pairs, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_get_header_map_value, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_remove_header_map_value, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_replace_header_map_value, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_add_header_map_value, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_get_shared_data, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_set_shared_data, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_register_shared_queue, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_resolve_shared_queue, DEFINE_WASM_NAME_ARG_I32_5)
    DEFINE_WASM_NAME(proxy_dequeue_shared_queue, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_enqueue_shared_queue, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_continue_request, DEFINE_WASM_NAME_ARG_VOID)
    DEFINE_WASM_NAME(proxy_continue_response, DEFINE_WASM_NAME_ARG_VOID)
    DEFINE_WASM_NAME(proxy_clear_route_cache, DEFINE_WASM_NAME_ARG_VOID)
    DEFINE_WASM_NAME(proxy_continue_stream, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_close_stream, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_http_call, DEFINE_WASM_NAME_ARG_I32_10)
    DEFINE_WASM_NAME(proxy_grpc_call, DEFINE_WASM_NAME_ARG_I32_12)
    DEFINE_WASM_NAME(proxy_grpc_stream, DEFINE_WASM_NAME_ARG_I32_9)
    DEFINE_WASM_NAME(proxy_grpc_send, DEFINE_WASM_NAME_ARG_I32_4)
    DEFINE_WASM_NAME(proxy_grpc_cancel, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_grpc_close, DEFINE_WASM_NAME_ARG_I32_1)
    DEFINE_WASM_NAME(proxy_get_status, DEFINE_WASM_NAME_ARG_I32_3)
    DEFINE_WASM_NAME(proxy_done, DEFINE_WASM_NAME_ARG_VOID)
    DEFINE_WASM_NAME(proxy_call_foreign_function, DEFINE_WASM_NAME_ARG_I32_6)
    DEFINE_WASM_NAME(proxy_define_metric, DEFINE_WASM_NAME_ARG_I32_4)
    DEFINE_WASM_NAME(proxy_increment_metric, DEFINE_WASM_NAME_ARG_I32_I64)
    DEFINE_WASM_NAME(proxy_record_metric, DEFINE_WASM_NAME_ARG_I32_I64)
    DEFINE_WASM_NAME(proxy_get_metric, DEFINE_WASM_NAME_ARG_I32_I64)
    { ngx_null_string, NULL, 0, {} }
};


#endif
