name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: "ubuntu-18.04"
    env:
      OPENRESTY_PREFIX: "/usr/local/openresty"

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.0.0

      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: "1.17.5"

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi
          default: true
          override: true

      - name: Get dependencies
        run: |
          sudo apt install -y cpanminus build-essential libncurses5-dev libreadline-dev libssl-dev perl
          curl https://raw.githubusercontent.com/apache/apisix/master/utils/linux-install-luarocks.sh -sL | bash -
          sudo luarocks install lua-resty-http > build.log 2>&1 || (cat build.log && exit 1)

          wget https://github.com/tinygo-org/tinygo/releases/download/v0.20.0/tinygo_0.20.0_amd64.deb
          sudo dpkg -i tinygo_0.20.0_amd64.deb

      - name: Before install
        run: |
          sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)
          git clone https://github.com/iresty/test-nginx.git test-nginx

      - name: Install
        run: |
          wget https://raw.githubusercontent.com/api7/apisix-build-tools/master/build-apisix-base.sh
          chmod +x build-apisix-base.sh
          OR_PREFIX=$OPENRESTY_PREFIX cc_opt="-Werror" ./build-apisix-base.sh latest

      - name: Script
        run: |
          sudo chown -R runner:root ~/.cache
          make build.go.testdata

          pushd ./t/testdata/assemblyscript && npm install && npm run asbuild && popd
          pushd ./t/testdata/rust && cargo build --target=wasm32-wasi && popd

          export PATH=$OPENRESTY_PREFIX/nginx/sbin:$PATH
          prove -I. -Itest-nginx/lib -r t/
