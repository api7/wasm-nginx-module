name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        vm:
          - wasmedge
          - wasmtime
    runs-on: "ubuntu-20.04"
    env:
      OPENRESTY_PREFIX: "/usr/local/openresty"

    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.0

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1

      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 10.0.0

      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version: "1.17.5"

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi
          default: true
          override: true

      - name: Get dependencies
        run: |
          sudo apt install -y cpanminus build-essential libncurses5-dev libreadline-dev libssl-dev perl luarocks libubsan0
          sudo luarocks install lua-resty-http > build.log 2>&1 || (cat build.log && exit 1)

          wget https://github.com/tinygo-org/tinygo/releases/download/v0.22.0/tinygo_0.22.0_amd64.deb
          sudo dpkg -i tinygo_0.22.0_amd64.deb

      - name: Before install
        run: |
          sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)
          git clone https://github.com/iresty/test-nginx.git test-nginx

      - name: Install WasmEdge
        if: matrix.vm == 'wasmedge'
        run: |
          ./install-wasmedge.sh

      - name: Install
        run: |
          wget https://raw.githubusercontent.com/api7/apisix-build-tools/master/build-apisix-base.sh
          chmod +x build-apisix-base.sh
          OR_PREFIX=$OPENRESTY_PREFIX CC="clang -fsanitize=address -fcolor-diagnostics -Qunused-arguments" \
              cc_opt="-Werror -fsanitize=undefined" \
              ld_opt="-lubsan -Wl,-rpath,$OPENRESTY_PREFIX/wasmedge/lib" \
              ./build-apisix-base.sh latest

      - name: Script
        run: |
          sudo chown -R runner:root ~/.cache
          make build.all.testdata
          export PATH=$OPENRESTY_PREFIX/nginx/sbin:$PATH
          WASM_VM=${{ matrix.vm }} prove -I. -Itest-nginx/lib -r t/
